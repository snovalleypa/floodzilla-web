@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Location Readings";
}

<style>
    div.barbox      {position:relative;white-space:nowrap;width:100%;} 
    div.bars        {position:absolute;top:-2px;height:24px;width:100%;}
    div.barleft     {position:absolute;height:22px;background-color:#cbdeeb}
    div.barval      {position:relative;left:5px;}
</style>
<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
        <div class="card card-info">
          <div class="card-header">
            <div class="card-title">Sensor Readings by Location</div>
          </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-5 col-lg-5 col-sm-5 col-xs-12">
        <div class="form-group">
            <label for="LocationIdSelect">Sensor Location:</label><br />
            <select id="LocationIdSelect" style="display:inline" name="LocationId" class="form-control" asp-items="@ViewBag.Locations"></select>
        </div>
    </div>
    <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12">
        <div class="form-group">
            <input type="hidden" id="InDate" value="@ViewBag.Date.ToString("yyyy-MM-dd")" />
            <label for="endDate">End Date:</label>
            <div class="input-group date" id="endDate" data-target-input="nearest">
                <input type='text' class="form-control datetimepicker-input" data-target="#endDate" />
                <div class="input-group-append" data-target="#endDate" data-toggle="datetimepicker">
                    <div class="input-group-text">
                        <span class="fa fa-calendar"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-5 col-lg-5 col-sm-5 col-xs-12">
        <div class="form-group">
            <label for="page">Page:</label><br />
            <select id="page" style="display:inline; width:200px" name="page" class="form-control">
              <option value="0">1</option>
            </select>
            <button style="display:none" class="btn btn-danger float-right" id="btnToggleOffline" onclick="ToggleOffline()">Loading...</button>
        </div>
    </div>
</div>
<div class="row" id="loading" style="display:none;">
    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
        Loading...
    </div>
</div>
<div class="row" id="results" style="display:none;">
    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
        <div>
            <button class="btn btn-danger disabled" id="btnDelete">Delete</button>&nbsp;&nbsp;&nbsp;
            <button class="btn btn-danger disabled" id="btnUndelete">Undelete</button>
        </div>
        <div style="height:10px"></div>
        <table style="width:100%" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th><input type="checkbox" id="checkAll" /></th>
                    <th>Timestamp</th>
                    <th>Device ID</th>
                    <th>Ground Height</th>
                    <th>Distance</th>
                    <th>Water Height</th>
                    <th>Status</th>
                    <th>RSSI</th>
                    <th>Battery Voltage</th>
                    <th>Delete Reason</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>
<div class="row" id="noData" style="display:none;">
    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
        No readings found
    </div>
</div>

<div class="modal fade" id="DelConfirmModel" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <form asp-action="DeleteLocationReadings" method="post">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Confirm</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="deleteReadingIds" id="deleteReadingIds" value="" />
                    <input type="hidden" name="deleteLocationId" id="deleteLocationId" />
                    <div class="col">
                        <div class="row">
                        Reason for deleting?
                        </div>
                        <div class="row">
                        <input class="admin-del-reason" style="width:100%;" type="text" name="deleteReason" id="deleteReason" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="UndelConfirmModel" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <form asp-action="UndeleteLocationReadings" method="post">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Confirm</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="undeleteReadingIds" id="undeleteReadingIds" value="" />
                    <input type="hidden" name="undeleteLocationId" id="undeleteLocationId" />
                    <div class="col">
                        <div class="row">
                        Reason for undeleting?
                        </div>
                        <div class="row">
                        <input class="admin-undel-reason" style="width:100%;" type="text" name="undeleteReason" id="undeleteReason" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Undelete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <environment names="Development">
        <script src="~/js/Admin/AdminDelUndelWithReason.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/js/Admin/AdminDelUndelWithReason.min.js"></script>
    </environment>

    <script>

        var pageSize = 100;

        var highlightList = '@ViewBag.Highlight';
        var highlight = highlightList.split(',');

        var dataTable;
        function InitTable() {
            dataTable = $("table").DataTable({
                retrieve: true,
                paging: false,
                searching: false,
                ordering: false,
                language: { emptyTable: "...", infoEmpty: "", zeroRecords: "No data" },
                dom: 'lfBrtip',
                buttons: ['copy', 'excel', 'pdf'],
                createdRow: function(row, data, dataIndex) {
                    if (highlight.includes('' + data.id)) {
                        $(row).addClass('highlight');
                    }
                    if (data.isDeleted) {
                        $(row).addClass('table-danger');
                    }
                    if (dataIndex > 0 && data.msecToNextReading > 3600000) {
                        $(row).addClass('datagap');
                    }
                },
                columns: [
                { "data": renderCheckbox },
                { "data": renderTimestamp },
                { "data": "deviceId", "orderable": true },
                { "data": "groundHeight", "orderable": true, render: function(data, type, row) { if (data == undefined || data == 0) return ''; else return data.toFixed(2) } },
                { "data": "distanceReading", "orderable": true, render: function(data, type, row) { if (data == undefined || data == 0) return ''; else return data.toFixed(2) } },
                { "data": renderHeight },
                { "data": "status", "orderable": true },
                { "data": "rssi", "orderable": true, render: function(data, type, row) { if (data == undefined || data == 0) return ''; else return data.toFixed(2) } },
                { "data": renderBattery },
                { "data": "deleteReason", orderable:true, defaultContent: '' },
                ]
            });
            $('table').on('draw.dt', function () {
                $('[data-toggle="tooltip"]').tooltip();
            });
            $('table').on('xhr.dt', function (e, settings, json, xhr) {
                $('#loading').hide();
                if (xhr.status == 200 && xhr.responseJSON.data.length > 0) {
                    $('#results').show();
                    $('#noData').hide();
                    LoadOfflineButton();
                    var pageCount = (xhr.responseJSON.count / pageSize);
                    $('#page').children().remove();
                    for (var p = 0; p < pageCount; p++) {
                       $('#page').append(new Option(p+1, p, false, p == xhr.responseJSON.pageNumber));
                    }
                }
                else {
                    ResetPage();
                    $('#results').hide();
                    $('#noData').show();
                }
            });
        }
        function UpdateTable(locationId) {
            if (locationId == 0 || isNaN(locationId)) {
                return;
            }
            var tzOffset = -(new Date().getTimezoneOffset());
            var endDate = moment($('#endDate').datetimepicker('date')).format('MM-DD-YYYY');
            var pageNumber = parseInt($("#page").children("option:selected").val());
            dataTable.ajax.url("/Reports/GetReadingsForLocation?locationId=" + locationId + "&endDateString=" + endDate + "&pageSize=" + pageSize + "&pageNumber=" + pageNumber);
            $('#loading').show();
            $('#results').hide();
            $('#noData').hide();
            dataTable.ajax.reload(function () {
                $('.highlight').first().each(function() { this.scrollIntoView(); });
            });
        }

        function ResetPage() {
            $('#page').children().remove();
            $('#page').append(new Option('1', '0'));
        }

        function renderTimestamp(data) {
            if (data == undefined || data == 0) {
                return '';
            }
            var ts = moment(data.timestamp).format("MM/DD/YYYY hh:mm:ss a");
            var log = '';
            if (data.deviceTypeId === 4) {
                log = '&nbsp;&nbsp;<a href="@Url.Action("ViewSenixLogForReadings")?readings=' + data.id + '">[Senix log]</a>';
            }
            return ts + log;
        }
        function renderHeight(data) {
            if (data == undefined || data == 0) {
                return '';
            }
            if (data.pageMinHeight == undefined || data.pageMinHeight == 0 || data.pageMaxHeight == undefined || data.pageMaxHeight == 0 || data.waterHeight == undefined || data.waterHeight == 0) {
                return '';
            }
            var pct = (data.waterHeight - data.pageMinHeight) / (data.pageMaxHeight - data.pageMinHeight) * 100;

            return '<div class="barbox"><div class="bars"><div class="barleft" style="width:' + pct.toFixed(0) + '%;"></div></div><div class="barval">' + data.waterHeight.toFixed(2) + '</div></div>';
        }

        function renderCheckbox(data) {
            if (data == undefined || data == 0) {
                return '';
            }
            if (data.id == undefined || data.id == 0) {
                return '';
            }
            return '<input type="checkbox" data-isdeleted="' + data.isDeleted + '" class="dt-body-center" id="chk_' + data.id + '" value="' + data.id + '"/>';
        }

        function renderBattery(data) {
            if (data == undefined || data == 0) {
                return '';
            }
            if (data.batteryVoltage == undefined || data.batteryVoltage == 0 || data.batteryPercent == undefined || data.batteryPercent == 0) {
                return '';
            }
                
            return '<span data-toggle="tooltip" title="' + (data.batteryVoltage / 1000).toFixed(3) + 'V">' + data.batteryPercent.toFixed(2) + '%</span>';
        }

        function InitOfflineButton(isOffline) {
            var text, targetIsOffline;
            targetIsOffline = !isOffline;
            if (isOffline) {
                text = "Bring Online";
            } else {
                text = "Take Offline";
            }
            $('#btnToggleOffline').text(text);
            $('#btnToggleOffline').show();
            $('#btnToggleOffline').data('targetVal', targetIsOffline);
        }

        function LoadOfflineButton() {
            const curLocation = parseInt($("#LocationIdSelect").children("option:selected").val());

            $.ajax({
                url: "/Reports/GetLocationOfflineStatus?locationId=" + curLocation,
                success: function (ret) {
                    if (ret !== undefined) {
                        InitOfflineButton(ret.isOffline);
                    }
                },
            });
        }

        function ToggleOffline() {
            const curLocation = parseInt($("#LocationIdSelect").children("option:selected").val());
            var btn = $('#btnToggleOffline');
            var target = $('#btnToggleOffline').data('targetVal');
            btn.addClass('disabled');
            btn.text('Working...');
            $.ajax({
                url: "/Reports/SetLocationOfflineStatus?locationId=" + curLocation + "&isOffline=" + target,
                success: function (ret) {
                    btn.removeClass('disabled');
                    InitOfflineButton(ret.isOffline);
                },
                error: function (ret) {
                    alert('An error occurred.  Please notify floodzilla.support@svpa.us');
                    InitOfflineButton(!target);
                },
            });
        }

        $(function() {

            var date = moment($("#InDate").val());
            var curLocation = parseInt($("#LocationIdSelect").children("option:selected").val());
            $('#endDate').datetimepicker({ format: "MM/DD/YYYY", maxDate: new Date() });
            $('#endDate').datetimepicker('date', date.format('MM/DD/YYYY'));
            $('#endDate').on('change.datetimepicker', function(event) {
                var newDate = moment($('#endDate').datetimepicker('date')).format('YYYY-MM-DD');
                window.location.href = "/Reports/?locationId=" + curLocation + "&date=" + newDate;
            });

            InitTable();
            $("#LocationIdSelect").change(function() {
                window.location.href = "/Reports/?locationId=" + $(this).children("option:selected").val() + '&date=' + moment($('#endDate').datetimepicker('date')).format('YYYY-MM-DD');
            });
            $("#page").change(function() {
                UpdateTable(curLocation);
            });

            InitAdminDelUndelWithReason('#deleteReadingIds', '#undeleteReadingIds');

            if (curLocation != 0) {
                UpdateTable(curLocation);
                $('#deleteLocationId').val(curLocation);
                $('#undeleteLocationId').val(curLocation);
            }
        });
    </script>
}
